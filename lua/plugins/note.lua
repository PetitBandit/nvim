return {

	-- {
	-- 	"vimwiki/vimwiki",
	-- 	dependencies = {},
	-- 	init = function() --replace 'config' with 'init'
	-- 		vim.g.vimwiki_list = { { path = "~/terminus/", syntax = "markdown", ext = ".md" } }
	-- 		vim.g.vimwiki_markdown_link_ext = 1
	-- 		vim.g.vimwiki_listsyms = " ○◐●✓"
	-- 		vim.g.vimwiki_option_diary_frequency = "weekly"
	-- 		local commands = {
	-- 			itemgroup = "Obsidian",
	-- 			commands = {
	-- 				{ ":VimwikiIndex", description = "Index page" },
	-- 				{ ":VimwikiDeleteFile", description = "delete page" },
	-- 				{ "VimwikiTable", description = "table " },
	-- 				{ ":VimwikiTOC", description = "Table Of Content " },
	-- 			},
	-- 		}
	-- 		require("legendary").commands(commands)
	-- 	end,
	-- },

	{
		"backdround/global-note.nvim",
		keys = {
			{ "<leader>'", ":lua require('global-note').toggle_note()<cr> ", desc = "Global note" },
			{ "<leader>7", ":lua require('global-note').toggle_note('project_local')<cr> ", desc = "project note" },
		},
		config = function()
			local get_project_name = function()
				local project_directory, err = vim.loop.cwd()
				if project_directory == nil then
					vim.notify(err, vim.log.levels.WARN)
					return nil
				end

				local project_name = vim.fs.basename(project_directory)
				if project_name == nil then
					vim.notify("Unable to get the project name", vim.log.levels.WARN)
					return nil
				end

				return project_name
			end
			require("global-note").setup({
				filename = "inbox.md",
				directory = "~/terminus/",
				title = "inbox",

				additional_presets = {
					projects = {
						filename = "projects-to-do.md",
						title = "List of projects",
						command_name = "ProjectsNote",
						-- All not specified options are used from the root.
					},

					project_local = {
						command_name = "ProjectNote",

						filename = function()
							return get_project_name() .. ".md"
						end,

						-- title = "Project note",
						title = get_project_name(),
					},
					food = {
						filename = "want-to-eat.md",
						title = "List of food",
						command_name = "FoodNote",
						-- All not specified options are used from the root.
					},
				},
			})

			-- Functions to toggle notes:
			-- require("global-note").toggle_note()
			-- require("global-note").toggle_note("projects")
			-- require("global-note").toggle_note("food")

			-- Commands to toggle notes (they are generated by command_name field):
			-- :GlobalNote -- by default
			-- :ProjectsNote
			-- :FoodNote
			-- vim.keymap.set("n", "<leader>dd", function()
			-- 	require("global-note").toggle_note("project_local")
			-- end, {
			-- 	desc = "Toggle project note",
			-- })
		end,
	},
}
